syntax = "proto3";

package net.gurigoro.kaiji.blackjack;
option java_outer_classname = "BlackJackOuterClass";

service BlackJack {
  rpc CreateNewGameRoom (CreateNewGameRoomRequest) returns (CreateNewGameRoomReply);
  rpc Betting (BettingRequest) returns (BettingReply);
  rpc SetGameResult (SetGameResultRequest) returns (SetGameResultReply);
  rpc DestroyGameRoom (DestroyGameRoomRequest) returns (DestroyGameRoomReply);
}

message CreateNewGameRoomRequest{
  string accessToken = 1;
  repeated int64 usersId = 2;
}

message CreateNewGameRoomReply{
  bool isSucceed = 1;
  int64 gameRoomId = 2;
}

message BettingRequest{
  string accessToken = 1;
  int64 gameRoomId = 2;
  int64 userId = 3;
  int64 betPoints = 4;
}

message BettingReply{
  enum BettingResult {
    SUCCEED = 0;
    NO_ENOUGH_POINTS = 1;
    ALREADY_BETTED = 2;
    UNKNOWN_FAILED = 3;
  }
  BettingResult result = 1;
  int64 userId = 2;
}

message PlayerResult{
  int64 userId = 1;
  enum GameResult {
    LOSE = 0;
    TIE = 1;
    WIN = 2;
    NATURAL_BJ_WIN = 3;
  }
  GameResult gameResult = 2;
}

message SetGameResultRequest{
  string accessToken = 1;
  int64 gameRoomId = 2;
  repeated PlayerResult playerResults = 3;
}

message PlayersPoint{
  int64 userId = 1;
  int64 gotPoints = 2;
}

message SetGameResultReply{
  bool isSucceed = 1;
  repeated PlayersPoint playersPoints = 2;
}

message DestroyGameRoomRequest{
  string accessToken = 1;
  int64 gameRoomId = 2;
}

message DestroyGameRoomReply{
  bool isSucceed = 1;
}
